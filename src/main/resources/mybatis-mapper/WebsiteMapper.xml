<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jin.springboot.mapper.WebsiteMapper">

    <select id="getAll" resultType="com.jin.springboot.entity.Website">
        select id, name, url, country from website
    </select>


    <insert id="add" parameterType="com.jin.springboot.entity.Website">
        insert into website(id, name, url, country) values (#{website.id},#{website.name},#{website.url},#{website.country})
    </insert>


    <update id="updateById" parameterType="com.jin.springboot.entity.Website">
        update website
        set    name    = #{website.name},
               url     = #{website.url},
               country = #{website.country}
        where  id      = #{website.id}
    </update>


    <delete id="deleteById" parameterType="com.jin.springboot.entity.Website">
        delete from website where id=#{id}
    </delete>


    <select id="getById" resultType="com.jin.springboot.entity.Website">
        select id, name, url, country from website where id=#{id}
    </select>


    <select id="getByName" resultType="com.jin.springboot.entity.Website">
        select id, name, url, country from website where name=#{name}
    </select>






    <!-- MySql Stored Procedure -->
    <resultMap id="cursorMap" type="com.jin.springboot.entity.Website">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="url" property="url"/>
        <result column="county" property="county"/>
    </resultMap>

    <!-- MySql Stored Procedure, call james.get_all_websites(); -->
    <select id="mysqlGetAllWebsites" parameterType="java.util.Map" statementType="CALLABLE" resultMap="cursorMap">
        {call james.get_all_websites()}
    </select>

    <!-- MySql Stored Procedure, call james.get_website_by_id(); -->
    <select id="mysqlGetWebsiteById" parameterType="java.util.Map" statementType="CALLABLE" resultMap="cursorMap">
        {call james.get_website_by_id(
            #{id, mode=IN, jdbcType=INTEGER}
        )}
    </select>




    <!-- Oracle Stored Procedure, call c##e519013.pkg_website.get_all_websites(po_websites OUT SYS_REFCURSOR); -->
    <select id="oracleGetAllWebsites" parameterType="java.util.Map" statementType="CALLABLE">
        {call c##e519013.pkg_website.get_all_websites(
            #{result, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=cursorMap}
        )}
    </select>

    <!-- Oracle Stored Procedure, call c##e519013.pkg_website.get_website_by_id(pi_id IN INTEGER, po_websites OUT SYS_REFCURSOR); -->
    <select id="oracleGetWebsiteById" parameterType="java.util.Map" statementType="CALLABLE">
        {call c##e519013.pkg_website.get_website_by_id(
            #{id, mode=IN, jdbcType=INTEGER},
            #{result, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=cursorMap}
        )}
    </select>



</mapper>